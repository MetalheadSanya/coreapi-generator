//
// Request.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Просто запрос */
public struct Request: Codable, Hashable {

    public var firstField: String
    public var secondField: Int?
    public var nonRequiredArrayField: [String]?
    public var requiredArrayField: [String]
    public var nonRequiredMapField: [String: String]?
    public var requiredMapField: [String: String]
    public var fourthField: SimpleComponentSchemas?
    /** это дата-тайм, класс по дефолту - OffsetDateTime */
    public var fifthField: Date?
    public var sixthField: SimpleComponentSchemas?

    public init(firstField: String, secondField: Int? = nil, nonRequiredArrayField: [String]? = nil, requiredArrayField: [String], nonRequiredMapField: [String: String]? = nil, requiredMapField: [String: String], fourthField: SimpleComponentSchemas? = nil, fifthField: Date? = nil, sixthField: SimpleComponentSchemas? = nil) {
        self.firstField = firstField
        self.secondField = secondField
        self.nonRequiredArrayField = nonRequiredArrayField
        self.requiredArrayField = requiredArrayField
        self.nonRequiredMapField = nonRequiredMapField
        self.requiredMapField = requiredMapField
        self.fourthField = fourthField
        self.fifthField = fifthField
        self.sixthField = sixthField
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case firstField
        case secondField
        case nonRequiredArrayField
        case requiredArrayField
        case nonRequiredMapField
        case requiredMapField
        case fourthField
        case fifthField
        case sixthField
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(firstField, forKey: .firstField)
        try container.encodeIfPresent(secondField, forKey: .secondField)
        try container.encodeIfPresent(nonRequiredArrayField, forKey: .nonRequiredArrayField)
        try container.encode(requiredArrayField, forKey: .requiredArrayField)
        try container.encodeIfPresent(nonRequiredMapField, forKey: .nonRequiredMapField)
        try container.encode(requiredMapField, forKey: .requiredMapField)
        try container.encodeIfPresent(fourthField, forKey: .fourthField)
        try container.encodeIfPresent(fifthField, forKey: .fifthField)
        try container.encodeIfPresent(sixthField, forKey: .sixthField)
    }
}

